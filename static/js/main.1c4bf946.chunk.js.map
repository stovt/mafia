{"version":3,"sources":["styles/colors.ts","styles/theme.ts","shared/context/GameContext/GameContext.reducer.ts","shared/context/GameContext/GameContext.actions.ts","shared/context/GameContext/GameContext.ts","shared/context/GameContext/GameContext.provider.tsx","shared/context/GameContext/useGameContext.ts","shared/constants/roles.ts","shared/constants/tabs.ts","shared/components/MembersTable/MembersTable.tsx","shared/components/VotesForm/VotesForm.tsx","shared/components/ChoosesForm/ChoosesForm.constants.ts","shared/components/SelectField/SelectField.tsx","shared/components/ChoosesForm/ChoosesForm.component.tsx","shared/components/ChoosesForm/ChoosesForm.container.tsx","shared/components/GameMessages/GameMessages.tsx","shared/components/GameStep/GameStep.tsx","pages/ManualRoles/Steps/InputRolesForm/InputRolesForm.constants.ts","pages/ManualRoles/Steps/InputRolesForm/InputRolesForm.component.tsx","pages/ManualRoles/Steps/InputRolesForm/InputRolesForm.container.tsx","pages/ManualRoles/Steps/Steps.tsx","pages/ManualRoles/ManualRoles.tsx","pages/RandomRoles/Steps/InputRolesForm/InputRolesForm.tsx","shared/helpers/index.ts","pages/RandomRoles/Steps/Steps.tsx","pages/RandomRoles/RandomRoles.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["colors","primary","secondary","textPrimary","textSecondary","transparentize","background","paper","buttonText","border","themeOptions","palette","type","main","default","text","divider","shape","borderRadius","overrides","MuiButton","root","textTransform","containedPrimary","color","MuiInputLabel","asterisk","display","MuiStepper","padding","theme","createMuiTheme","initialState","gameMembers","gameMessages","gameTime","reducer","state","action","members","gameMember","find","m","id","memberId","filter","killed","sort","a","b","securityVote","messages","time","createContext","GameContextProvider","children","useReducer","GameContextReducer","dispatch","setGameMembers","useCallback","killGameMember","setSecurityVote","setGameMessages","setGameTime","resetGame","GameContext","Provider","value","useSnackbar","useContext","MAFIA","MAFIA_DON","DOCTOR","SHERIFF","BITCH","TERRORIST","SECURITY","MANIAC","PIECE","MANUAL_ROLES","RANDOM_ROLES","MembersTable","useGameContext","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","TableBody","map","key","Box","role","VotesForm","useState","votes","setVotes","handleOnChange","event","values","options","useMemo","label","handleOnVoted","forEach","vote","Autocomplete","multiple","getOptionLabel","option","getOptionSelected","filterSelectedOptions","renderInput","params","TextField","variant","placeholder","onChange","textAlign","my","Button","onClick","INITIAL_VALUES","ROLES","SelectField","error","name","helperText","disabled","FormControl","fullWidth","InputLabel","htmlFor","Select","inputProps","MenuProps","getContentAnchorEl","anchorOrigin","vertical","horizontal","FormHelperText","InputRolesForm","handleSubmit","bitch","mafiaDon","mafia","maniac","doctor","security","sheriff","onSubmit","length","mb","MenuItem","every","undefined","ChoosesFormContainer","handleOnSubmit","bitchChoose","mafiaChoose","maniacChoose","doctorChoose","securityChoose","v","i","indexOf","initialValues","props","GameMessages","gameMessage","fontSize","GameStep","Array","fill","render","arrayHelpers","_","index","Object","IconButton","remove","align","colSpan","startIcon","push","InputRolesFormContainer","goToNextStep","StepsComponent","activeStep","setActiveStep","handleNextStep","step","Stepper","orientation","Step","StepLabel","StepContent","ManualRoles","Steps","setMembers","handleOnChangeMembers","shuffledMembers","Math","random","freeSolo","renderTags","val","getTagProps","Chip","RandomRoles","App","TABS","tab","setTab","handleOnChangeTab","newTab","AppBar","position","Tabs","indicatorColor","textColor","centered","Tab","Container","maxWidth","py","xs","sm","Boolean","window","location","hostname","match","renderRoot","document","getElementById","ReactDOM","ThemeProvider","CssBaseline","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.1c4bf946.chunk.js","sourcesContent":["import { transparentize } from 'polished';\n\nconst colors = {\n  primary: '#0c9dbe',\n  secondary: '#ff275f',\n  textPrimary: '#fff',\n  textSecondary: transparentize(0.4, '#fff'),\n  background: '#202125',\n  paper: '#292a2d',\n  buttonText: '#131417',\n  border: transparentize(0.88, '#fff')\n};\n\nexport default colors;\n","import { createMuiTheme, ThemeOptions } from '@material-ui/core/styles';\nimport colors from './colors';\n\nexport const themeOptions: ThemeOptions = {\n  colors,\n  palette: {\n    type: 'dark',\n    primary: {\n      main: colors.primary\n    },\n    secondary: {\n      main: colors.secondary\n    },\n    background: {\n      default: colors.background\n    },\n    text: {\n      primary: colors.textPrimary,\n      secondary: colors.textSecondary\n    },\n    divider: colors.border\n  },\n  shape: {\n    borderRadius: 8\n  },\n  overrides: {\n    MuiButton: {\n      root: {\n        textTransform: 'none'\n      },\n      containedPrimary: {\n        color: colors.buttonText\n      }\n    },\n    MuiInputLabel: {\n      asterisk: {\n        display: 'none'\n      }\n    },\n    MuiStepper: {\n      root: {\n        background: colors.background,\n        padding: 0\n      }\n    }\n  }\n};\n\nconst theme = createMuiTheme(themeOptions);\n\nexport default theme;\n","import {\n  SET_GAME_MEMBERS,\n  KILL_GAME_MEMBER,\n  SET_SECURITY_VOTE,\n  SET_GAME_MESSAGES,\n  SET_GAME_TIME,\n  RESET_GAME,\n  Action\n} from './GameContext.actions';\nimport { GameMember, GameTime } from './GameContext.types';\n\ninterface State {\n  gameMembers: GameMember[];\n  securityVote?: number | null;\n  gameMessages: string[];\n  gameTime: GameTime;\n}\n\nexport const initialState: State = {\n  gameMembers: [],\n  gameMessages: [],\n  gameTime: 'day'\n};\n\nconst reducer = (state: State, action: Action) => {\n  switch (action.type) {\n    case SET_GAME_MEMBERS:\n      return {\n        ...state,\n        gameMembers: action.members\n      };\n    case KILL_GAME_MEMBER: {\n      const gameMember = state.gameMembers.find(m => m.id === action.memberId);\n\n      if (gameMember) {\n        return {\n          ...state,\n          gameMembers: [\n            ...state.gameMembers.filter(m => m.id !== action.memberId),\n            {\n              ...gameMember,\n              killed: true\n            }\n          ].sort((a, b) => {\n            if (a.id > b.id) return 1;\n            if (b.id > a.id) return -1;\n\n            return 0;\n          })\n        };\n      }\n\n      return state;\n    }\n    case SET_SECURITY_VOTE:\n      return {\n        ...state,\n        securityVote: action.memberId\n      };\n    case SET_GAME_MESSAGES:\n      return {\n        ...state,\n        gameMessages: action.messages\n      };\n    case SET_GAME_TIME:\n      return {\n        ...state,\n        gameTime: action.time\n      };\n    case RESET_GAME:\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { GameMember, GameTime } from './GameContext.types';\n\nexport const SET_GAME_MEMBERS = '@@game/SET_GAME_MEMBERS';\nexport const KILL_GAME_MEMBER = '@@game/KILL_GAME_MEMBER';\nexport const SET_SECURITY_VOTE = '@@game/SET_SECURITY_VOTE';\nexport const SET_GAME_MESSAGES = '@@game/SET_GAME_MESSAGES';\nexport const SET_GAME_TIME = '@@game/SET_GAME_TIME';\nexport const RESET_GAME = '@@game/RESET_GAME';\n\ninterface SetGameMembers {\n  type: typeof SET_GAME_MEMBERS;\n  members: GameMember[];\n}\n\ninterface KillGameMember {\n  type: typeof KILL_GAME_MEMBER;\n  memberId: number;\n}\n\ninterface SetSecurityVote {\n  type: typeof SET_SECURITY_VOTE;\n  memberId: number | null;\n}\n\ninterface SetGameMessages {\n  type: typeof SET_GAME_MESSAGES;\n  messages: string[];\n}\n\ninterface SetGameTime {\n  type: typeof SET_GAME_TIME;\n  time: GameTime;\n}\n\ninterface ResetGame {\n  type: typeof RESET_GAME;\n}\n\nexport type Action =\n  | SetGameMembers\n  | KillGameMember\n  | SetSecurityVote\n  | SetGameMessages\n  | SetGameTime\n  | ResetGame;\n","import { createContext } from 'react';\nimport { GameMember, GameTime } from './GameContext.types';\n\nexport interface GameContext {\n  gameMembers: GameMember[];\n  securityVote?: number | null;\n  gameMessages: string[];\n  gameTime: GameTime;\n  setGameMembers: (members: GameMember[]) => void;\n  killGameMember: (memberId: number) => void;\n  setSecurityVote: (memberId: number | null) => void;\n  setGameMessages: (messages: string[]) => void;\n  setGameTime: (time: GameTime) => void;\n  resetGame: () => void;\n}\n\nexport default createContext<GameContext | null>(null);\n","import React, { useReducer, useCallback } from 'react';\nimport {\n  SET_GAME_MEMBERS,\n  KILL_GAME_MEMBER,\n  SET_SECURITY_VOTE,\n  SET_GAME_MESSAGES,\n  SET_GAME_TIME,\n  RESET_GAME\n} from './GameContext.actions';\nimport GameContextReducer, { initialState } from './GameContext.reducer';\nimport { GameMember, GameTime } from './GameContext.types';\nimport GameContext from './GameContext';\n\nconst GameContextProvider: React.FC = ({ children }) => {\n  const [{ gameMembers, securityVote, gameMessages, gameTime }, dispatch] = useReducer(\n    GameContextReducer,\n    initialState\n  );\n\n  const setGameMembers = useCallback((members: GameMember[]) => {\n    dispatch({\n      type: SET_GAME_MEMBERS,\n      members\n    });\n  }, []);\n\n  const killGameMember = useCallback((memberId: number) => {\n    dispatch({\n      type: KILL_GAME_MEMBER,\n      memberId\n    });\n  }, []);\n\n  const setSecurityVote = useCallback((memberId: number | null) => {\n    dispatch({\n      type: SET_SECURITY_VOTE,\n      memberId\n    });\n  }, []);\n\n  const setGameMessages = useCallback((messages: string[]) => {\n    dispatch({\n      type: SET_GAME_MESSAGES,\n      messages\n    });\n  }, []);\n\n  const setGameTime = useCallback((time: GameTime) => {\n    dispatch({\n      type: SET_GAME_TIME,\n      time\n    });\n  }, []);\n\n  const resetGame = useCallback(() => {\n    dispatch({\n      type: RESET_GAME\n    });\n  }, []);\n\n  return (\n    <GameContext.Provider\n      value={{\n        gameMembers,\n        gameMessages,\n        securityVote,\n        gameTime,\n        setGameMembers,\n        killGameMember,\n        setSecurityVote,\n        setGameMessages,\n        setGameTime,\n        resetGame\n      }}\n    >\n      {children}\n    </GameContext.Provider>\n  );\n};\n\nexport default GameContextProvider;\n","import { useContext } from 'react';\nimport GameContext, { GameContext as IGameContext } from './GameContext';\n\nconst useSnackbar = () => useContext(GameContext) as IGameContext;\n\nexport default useSnackbar;\n","export const MAFIA = 'Мафія';\nexport const MAFIA_DON = 'Дон Мафії';\nexport const DOCTOR = 'Лікар';\nexport const SHERIFF = 'Шериф';\nexport const BITCH = 'Шлюха';\nexport const TERRORIST = 'Терорист';\nexport const SECURITY = 'Тілоохоронець';\nexport const MANIAC = 'Маньяк';\nexport const PIECE = 'Мирний';\n","export const MANUAL_ROLES = 'manual-roles';\nexport const RANDOM_ROLES = 'random-roles';\n","import React from 'react';\nimport {\n  TableContainer,\n  Paper,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  Box\n} from '@material-ui/core';\nimport { useGameContext } from 'shared/context/GameContext';\n\nconst MembersTable = () => {\n  const { gameMembers } = useGameContext();\n\n  return (\n    <TableContainer component={Paper}>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>№</TableCell>\n            <TableCell>Роль</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {gameMembers.map(gameMember => (\n            <TableRow key={gameMember.id}>\n              <TableCell>\n                <Box color={gameMember.killed ? 'secondary.main' : 'inherit'}>{gameMember.id}</Box>\n              </TableCell>\n              <TableCell>\n                <Box color={gameMember.killed ? 'secondary.main' : 'inherit'}>\n                  {gameMember.role}\n                </Box>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default MembersTable;\n","import React, { useState, useCallback, useMemo } from 'react';\nimport { Box, TextField, Button } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { useGameContext } from 'shared/context/GameContext';\n\ninterface Value {\n  label: string;\n  value: number;\n}\n\nconst VotesForm = () => {\n  const { gameMembers, killGameMember, setGameTime } = useGameContext();\n\n  const [votes, setVotes] = useState<Value[]>([]);\n\n  const handleOnChange = useCallback((event: React.ChangeEvent<{}>, values: Value[]) => {\n    setVotes(values);\n  }, []);\n\n  const options = useMemo(\n    () =>\n      gameMembers\n        .filter(gameMember => !gameMember.killed)\n        .map(gameMember => ({\n          label: `${gameMember.id} - ${gameMember.role}`,\n          value: gameMember.id\n        })),\n    [gameMembers]\n  );\n\n  const handleOnVoted = useCallback(() => {\n    votes.forEach(vote => {\n      killGameMember(vote.value);\n    });\n    setGameTime('night');\n  }, [votes, killGameMember, setGameTime]);\n\n  return (\n    <Box>\n      <Autocomplete\n        multiple\n        options={options}\n        getOptionLabel={option => option.label}\n        getOptionSelected={(option, value) => option.value === value.value}\n        filterSelectedOptions\n        renderInput={params => (\n          <TextField\n            {...params}\n            variant='outlined'\n            label='Вибір денного голосування'\n            placeholder='Учасники'\n          />\n        )}\n        onChange={handleOnChange}\n        value={votes}\n      />\n\n      <Box textAlign='center' my={2}>\n        <Button variant='contained' color='primary' onClick={handleOnVoted}>\n          Місто засинає\n        </Button>\n      </Box>\n    </Box>\n  );\n};\n\nexport default VotesForm;\n","import { ROLES } from 'shared/constants';\n\ninterface InitialValues {\n  [ROLES.BITCH]?: number | '';\n  [ROLES.MAFIA_DON]?: number | '';\n  [ROLES.MAFIA]?: number | '';\n  [ROLES.MANIAC]?: number | '';\n  [ROLES.DOCTOR]?: number | '';\n  [ROLES.SECURITY]?: number | '';\n  [ROLES.SHERIFF]?: number | '';\n}\n\nexport const INITIAL_VALUES: InitialValues = {\n  [ROLES.BITCH]: '',\n  [ROLES.MAFIA_DON]: '',\n  [ROLES.MAFIA]: '',\n  [ROLES.MANIAC]: '',\n  [ROLES.DOCTOR]: '',\n  [ROLES.SHERIFF]: '',\n  [ROLES.SECURITY]: ''\n};\n","import * as React from 'react';\nimport { Field } from 'formik';\nimport { FormControl, FormHelperText, InputLabel } from '@material-ui/core';\nimport { Select } from 'formik-material-ui';\n\ninterface SelectProps {\n  error?: string;\n  options: JSX.Element | JSX.Element[];\n  label: string;\n  name: string;\n  id: string;\n  helperText?: string;\n  disabled?: boolean;\n}\n\nconst SelectField: React.FC<SelectProps> = ({\n  error,\n  options,\n  label,\n  name,\n  id,\n  helperText,\n  disabled = false\n}) => (\n  <FormControl fullWidth variant='outlined' error={!!error}>\n    <InputLabel htmlFor={name}>{label}</InputLabel>\n    <Field\n      component={Select}\n      id={id}\n      name={name}\n      label={label}\n      inputProps={{ id, name }}\n      MenuProps={{\n        getContentAnchorEl: null,\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'left'\n        }\n      }}\n      disabled={disabled}\n    >\n      {options}\n    </Field>\n    {(!!error || !!helperText) && <FormHelperText>{error || helperText}</FormHelperText>}\n  </FormControl>\n);\n\nexport default SelectField;\n","import React, { useMemo } from 'react';\nimport { Form, FormikProps } from 'formik';\nimport { MenuItem, Button, Box } from '@material-ui/core';\nimport { ROLES } from 'shared/constants';\nimport { useGameContext } from 'shared/context/GameContext';\nimport SelectField from 'shared/components/SelectField';\nimport { INITIAL_VALUES } from './ChoosesForm.constants';\n\nconst InputRolesForm: React.FC<FormikProps<typeof INITIAL_VALUES>> = ({ handleSubmit, values }) => {\n  const { gameMembers } = useGameContext();\n\n  const bitch = useMemo(() => gameMembers.filter(gameMember => gameMember.role === ROLES.BITCH), [\n    gameMembers\n  ]);\n\n  const mafiaDon = useMemo(\n    () => gameMembers.filter(gameMember => gameMember.role === ROLES.MAFIA_DON),\n    [gameMembers]\n  );\n\n  const mafia = useMemo(\n    () =>\n      gameMembers.filter(\n        gameMember => gameMember.role === ROLES.MAFIA || gameMember.role === ROLES.MAFIA_DON\n      ),\n    [gameMembers]\n  );\n\n  const maniac = useMemo(() => gameMembers.filter(gameMember => gameMember.role === ROLES.MANIAC), [\n    gameMembers\n  ]);\n\n  const doctor = useMemo(() => gameMembers.filter(gameMember => gameMember.role === ROLES.DOCTOR), [\n    gameMembers\n  ]);\n\n  const security = useMemo(\n    () => gameMembers.filter(gameMember => gameMember.role === ROLES.SECURITY),\n    [gameMembers]\n  );\n\n  const sheriff = useMemo(\n    () => gameMembers.filter(gameMember => gameMember.role === ROLES.SHERIFF),\n    [gameMembers]\n  );\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      {!!bitch.length && (\n        <Box mb={2}>\n          <SelectField\n            id={ROLES.BITCH}\n            name={ROLES.BITCH}\n            label='Вибір шлюхи'\n            options={gameMembers\n              .filter(gameMember => !gameMember.killed && gameMember.role !== ROLES.BITCH)\n              .map(gameMember => (\n                <MenuItem value={gameMember.id} key={gameMember.id}>\n                  {gameMember.id} - {gameMember.role}\n                </MenuItem>\n              ))}\n            error={bitch.every(m => m.killed) ? 'Шлюха мертва' : undefined}\n            disabled={bitch.every(m => m.killed)}\n          />\n        </Box>\n      )}\n\n      {!!mafiaDon.length && (\n        <Box mb={2}>\n          <SelectField\n            id={ROLES.MAFIA_DON}\n            name={ROLES.MAFIA_DON}\n            label='Вибір дона мафії'\n            options={gameMembers\n              .filter(\n                gameMember =>\n                  !gameMember.killed &&\n                  gameMember.role !== ROLES.MAFIA &&\n                  gameMember.role !== ROLES.MAFIA_DON\n              )\n              .map(gameMember => (\n                <MenuItem value={gameMember.id} key={gameMember.id}>\n                  {gameMember.id} - {gameMember.role}\n                </MenuItem>\n              ))}\n            error={mafiaDon.every(m => m.killed) ? 'Дон мафії мертвий' : undefined}\n            helperText={\n              mafiaDon.filter(m => !m.killed).length === 1 && values[ROLES.BITCH] === mafiaDon[0].id\n                ? 'Шлюха сіла на дона мафії'\n                : undefined\n            }\n            disabled={\n              mafiaDon.every(m => m.killed) ||\n              (mafiaDon.filter(m => !m.killed).length === 1 &&\n                values[ROLES.BITCH] === mafiaDon[0].id)\n            }\n          />\n        </Box>\n      )}\n\n      {!!mafia.length && (\n        <Box mb={2}>\n          <SelectField\n            id={ROLES.MAFIA}\n            name={ROLES.MAFIA}\n            label='Вибір мафії'\n            options={gameMembers\n              .filter(\n                gameMember =>\n                  !gameMember.killed &&\n                  gameMember.role !== ROLES.MAFIA &&\n                  gameMember.role !== ROLES.MAFIA_DON\n              )\n              .map(gameMember => (\n                <MenuItem value={gameMember.id} key={gameMember.id}>\n                  {gameMember.id} - {gameMember.role}\n                </MenuItem>\n              ))}\n            error={mafia.every(m => m.killed) ? 'Мафія мертва' : undefined}\n            helperText={\n              mafia.filter(m => !m.killed).length === 1 &&\n              !!mafia.filter(m => m.id === values[ROLES.BITCH]).length\n                ? 'Шлюха сіла на мафію'\n                : undefined\n            }\n            disabled={\n              mafia.every(m => m.killed) ||\n              (mafia.filter(m => !m.killed).length === 1 &&\n                !!mafia.filter(m => m.id === values[ROLES.BITCH]).length)\n            }\n          />\n        </Box>\n      )}\n\n      {!!maniac.length && (\n        <Box mb={2}>\n          <SelectField\n            id={ROLES.MANIAC}\n            name={ROLES.MANIAC}\n            label='Вибір маньяка'\n            options={gameMembers\n              .filter(gameMember => !gameMember.killed && gameMember.role !== ROLES.MANIAC)\n              .map(gameMember => (\n                <MenuItem value={gameMember.id} key={gameMember.id}>\n                  {gameMember.id} - {gameMember.role}\n                </MenuItem>\n              ))}\n            error={maniac.every(m => m.killed) ? 'Маньяк мертвий' : undefined}\n            helperText={\n              maniac.filter(m => !m.killed).length === 1 && values[ROLES.BITCH] === maniac[0].id\n                ? 'Шлюха сіла на маньяка'\n                : undefined\n            }\n            disabled={\n              maniac.every(m => m.killed) ||\n              (maniac.filter(m => !m.killed).length === 1 && values[ROLES.BITCH] === maniac[0].id)\n            }\n          />\n        </Box>\n      )}\n\n      {!!doctor.length && (\n        <Box mb={2}>\n          <SelectField\n            id={ROLES.DOCTOR}\n            name={ROLES.DOCTOR}\n            label='Вибір лікаря'\n            options={gameMembers\n              .filter(gameMember => !gameMember.killed)\n              .map(gameMember => (\n                <MenuItem value={gameMember.id} key={gameMember.id}>\n                  {gameMember.id} - {gameMember.role}\n                </MenuItem>\n              ))}\n            error={doctor.every(m => m.killed) ? 'Лікар мертвий' : undefined}\n            helperText={\n              doctor.filter(m => !m.killed).length === 1 && values[ROLES.BITCH] === doctor[0].id\n                ? 'Шлюха сіла на лікаря'\n                : undefined\n            }\n            disabled={\n              doctor.every(m => m.killed) ||\n              (doctor.filter(m => !m.killed).length === 1 && values[ROLES.BITCH] === doctor[0].id)\n            }\n          />\n        </Box>\n      )}\n\n      {!!security.length && (\n        <Box mb={2}>\n          <SelectField\n            id={ROLES.SECURITY}\n            name={ROLES.SECURITY}\n            label='Вибір тілоохоронця'\n            options={gameMembers\n              .filter(gameMember => !gameMember.killed && gameMember.role !== ROLES.SECURITY)\n              .map(gameMember => (\n                <MenuItem value={gameMember.id} key={gameMember.id}>\n                  {gameMember.id} - {gameMember.role}\n                </MenuItem>\n              ))}\n            error={security.every(m => m.killed) ? 'Тілоохоронець мертвий' : undefined}\n            helperText={\n              security.filter(m => !m.killed).length === 1 && values[ROLES.BITCH] === security[0].id\n                ? 'Шлюха сіла на тілоохоронця'\n                : undefined\n            }\n            disabled={\n              security.every(m => m.killed) ||\n              (security.filter(m => !m.killed).length === 1 &&\n                values[ROLES.BITCH] === security[0].id)\n            }\n          />\n        </Box>\n      )}\n\n      {!!sheriff.length && (\n        <Box mb={2}>\n          <SelectField\n            id={ROLES.SHERIFF}\n            name={ROLES.SHERIFF}\n            label='Вибір шерифа'\n            options={gameMembers\n              .filter(gameMember => !gameMember.killed && gameMember.role !== ROLES.SHERIFF)\n              .map(gameMember => (\n                <MenuItem value={gameMember.id} key={gameMember.id}>\n                  {gameMember.id} - {gameMember.role}\n                </MenuItem>\n              ))}\n            error={sheriff.every(m => m.killed) ? 'Шериф мертвий' : undefined}\n            helperText={\n              sheriff.filter(m => !m.killed).length === 1 && values[ROLES.BITCH] === sheriff[0].id\n                ? 'Шлюха сіла на шерифа'\n                : undefined\n            }\n            disabled={\n              sheriff.every(m => m.killed) ||\n              (sheriff.filter(m => !m.killed).length === 1 && values[ROLES.BITCH] === sheriff[0].id)\n            }\n          />\n        </Box>\n      )}\n\n      <Box textAlign='center' my={2}>\n        <Button type='submit' variant='contained' color='primary'>\n          Місто прокидається\n        </Button>\n      </Box>\n    </Form>\n  );\n};\n\nexport default InputRolesForm;\n","import React, { useCallback } from 'react';\nimport { Formik } from 'formik';\nimport { ROLES } from 'shared/constants';\nimport { useGameContext } from 'shared/context/GameContext';\nimport { INITIAL_VALUES } from './ChoosesForm.constants';\nimport ChoosesFormComponent from './ChoosesForm.component';\n\nconst ChoosesFormContainer = () => {\n  const {\n    securityVote,\n    setGameTime,\n    setGameMessages,\n    killGameMember,\n    setSecurityVote\n  } = useGameContext();\n\n  const handleOnSubmit = useCallback(\n    (values: typeof INITIAL_VALUES) => {\n      let gameMessages: string[] = [];\n\n      const bitchChoose = values[ROLES.BITCH];\n      const mafiaChoose = values[ROLES.MAFIA];\n      const maniacChoose = values[ROLES.MANIAC];\n      const doctorChoose = values[ROLES.DOCTOR];\n      const securityChoose = values[ROLES.SECURITY];\n\n      // Шлюха\n      if (bitchChoose) {\n        gameMessages = [...gameMessages, `Шлюха сіла на номер ${bitchChoose}.`];\n      }\n\n      // Тілоохоронець\n      if (securityChoose) {\n        setSecurityVote(securityChoose as number);\n        gameMessages = [...gameMessages, `Тілоохоронець поставив щит на номер ${securityChoose}.`];\n      } else {\n        setSecurityVote(null);\n      }\n\n      // Мафія\n      if (mafiaChoose && mafiaChoose !== doctorChoose && mafiaChoose !== securityVote) {\n        killGameMember(mafiaChoose as number);\n        gameMessages = [...gameMessages, `Убили номер ${mafiaChoose}.`];\n      }\n\n      // Маньяк\n      if (maniacChoose && maniacChoose !== doctorChoose && maniacChoose !== securityVote) {\n        killGameMember(maniacChoose as number);\n        gameMessages = [...gameMessages, `Убили номер ${maniacChoose}.`];\n      }\n\n      setGameTime('day');\n      setGameMessages(gameMessages.filter((v, i) => gameMessages.indexOf(v) === i));\n    },\n    [setGameTime, setGameMessages, securityVote, killGameMember, setSecurityVote]\n  );\n\n  return (\n    <Formik initialValues={INITIAL_VALUES} onSubmit={handleOnSubmit}>\n      {props => <ChoosesFormComponent {...props} />}\n    </Formik>\n  );\n};\n\nexport default ChoosesFormContainer;\n","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport { useGameContext } from 'shared/context/GameContext';\n\nconst GameMessages = () => {\n  const { gameMessages } = useGameContext();\n\n  return (\n    <>\n      {gameMessages.map(gameMessage => (\n        <Box\n          mb={2}\n          textAlign='center'\n          color='primary.main'\n          fontSize='h6.fontSize'\n          key={gameMessage}\n        >\n          {gameMessage}\n        </Box>\n      ))}\n    </>\n  );\n};\n\nexport default GameMessages;\n","import React from 'react';\nimport { Box } from '@material-ui/core';\nimport { useGameContext } from 'shared/context/GameContext';\nimport MembersTable from 'shared/components/MembersTable';\nimport VotesForm from 'shared/components/VotesForm';\nimport ChoosesForm from 'shared/components/ChoosesForm';\nimport GameMessages from 'shared/components/GameMessages';\n\nconst GameStep = () => {\n  const { gameTime } = useGameContext();\n\n  return (\n    <Box>\n      <Box mb={2}>\n        <MembersTable />\n      </Box>\n      {gameTime === 'day' && <VotesForm />}\n      {gameTime === 'night' && <ChoosesForm />}\n      <GameMessages />\n    </Box>\n  );\n};\n\nexport default GameStep;\n","import { ROLES } from 'shared/constants';\n\nexport const INITIAL_VALUES = {\n  gameMembers: Array(8).fill(ROLES.PIECE)\n};\n","import React from 'react';\nimport { Form, FormikProps, FieldArray } from 'formik';\nimport {\n  TableContainer,\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell,\n  Paper,\n  MenuItem,\n  IconButton,\n  Button,\n  Box\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddIcon from '@material-ui/icons/Add';\nimport { ROLES } from 'shared/constants';\nimport SelectField from 'shared/components/SelectField';\nimport { INITIAL_VALUES } from './InputRolesForm.constants';\n\nconst InputRolesForm: React.FC<FormikProps<typeof INITIAL_VALUES>> = ({\n  handleSubmit,\n  values: { gameMembers }\n}) => (\n  <Form onSubmit={handleSubmit}>\n    <TableContainer component={Paper}>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>№</TableCell>\n            <TableCell>Роль</TableCell>\n            <TableCell>Дія</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          <FieldArray\n            name='gameMembers'\n            render={arrayHelpers => (\n              <>\n                {gameMembers.map((_, index) => (\n                  <TableRow key={index}>\n                    <TableCell>{index + 1}</TableCell>\n                    <TableCell>\n                      <SelectField\n                        id={`gameMembers.${index}`}\n                        name={`gameMembers.${index}`}\n                        label='Роль'\n                        options={Object.values(ROLES).map(role => (\n                          <MenuItem value={role} key={role}>\n                            {role}\n                          </MenuItem>\n                        ))}\n                      />\n                    </TableCell>\n                    <TableCell>\n                      <IconButton color='secondary' onClick={() => arrayHelpers.remove(index)}>\n                        <DeleteIcon />\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                ))}\n\n                <TableRow>\n                  <TableCell align='center' colSpan={3}>\n                    <Button\n                      variant='contained'\n                      color='primary'\n                      startIcon={<AddIcon />}\n                      onClick={() => arrayHelpers.push(ROLES.PIECE)}\n                    >\n                      Додати роль\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              </>\n            )}\n          />\n        </TableBody>\n      </Table>\n    </TableContainer>\n\n    <Box textAlign='center' my={2}>\n      <Button type='submit' variant='contained' color='primary'>\n        Почати гру\n      </Button>\n    </Box>\n  </Form>\n);\n\nexport default InputRolesForm;\n","import React, { useCallback } from 'react';\nimport { Formik } from 'formik';\nimport { useGameContext } from 'shared/context/GameContext';\nimport { INITIAL_VALUES } from './InputRolesForm.constants';\nimport InputRolesFormComponent from './InputRolesForm.component';\n\ninterface InputRolesFormContainerProps {\n  goToNextStep: () => void;\n}\n\nconst InputRolesFormContainer: React.FC<InputRolesFormContainerProps> = ({ goToNextStep }) => {\n  const { setGameMembers } = useGameContext();\n\n  const handleOnSubmit = useCallback(\n    ({ gameMembers }: typeof INITIAL_VALUES) => {\n      setGameMembers(\n        gameMembers.map((gameMember, index) => ({\n          id: index + 1,\n          role: gameMember,\n          killed: false\n        }))\n      );\n      goToNextStep();\n    },\n    [setGameMembers, goToNextStep]\n  );\n\n  return (\n    <Formik initialValues={INITIAL_VALUES} onSubmit={handleOnSubmit}>\n      {props => <InputRolesFormComponent {...props} />}\n    </Formik>\n  );\n};\n\nexport default InputRolesFormContainer;\n","import React, { useState, useCallback } from 'react';\nimport { Stepper, Step, StepLabel, StepContent } from '@material-ui/core';\nimport GameStep from 'shared/components/GameStep';\nimport InputRolesForm from './InputRolesForm';\n\nconst StepsComponent = () => {\n  const [activeStep, setActiveStep] = useState(0);\n\n  const handleNextStep = useCallback(() => {\n    setActiveStep(step => step + 1);\n  }, []);\n\n  return (\n    <Stepper activeStep={activeStep} orientation='vertical'>\n      <Step>\n        <StepLabel>Присвоєння ролей</StepLabel>\n        <StepContent>\n          <InputRolesForm goToNextStep={handleNextStep} />\n        </StepContent>\n      </Step>\n      <Step>\n        <StepLabel>Гра</StepLabel>\n        <StepContent>\n          <GameStep />\n        </StepContent>\n      </Step>\n    </Stepper>\n  );\n};\n\nexport default StepsComponent;\n","import React from 'react';\nimport Steps from './Steps';\n\nconst ManualRoles = () => <Steps />;\n\nexport default ManualRoles;\n","import React, { useState, useCallback } from 'react';\nimport { Box, Button, Chip, TextField } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ROLES } from 'shared/constants';\nimport { shuffleArray } from 'shared/helpers';\nimport { useGameContext } from 'shared/context/GameContext';\n\ninterface InputRolesFormProps {\n  goToNextStep: () => void;\n}\n\nconst InputRolesForm: React.FC<InputRolesFormProps> = ({ goToNextStep }) => {\n  const { setGameMembers } = useGameContext();\n\n  const [members, setMembers] = useState([\n    ROLES.BITCH,\n    ROLES.MAFIA_DON,\n    ROLES.MAFIA,\n    ROLES.MANIAC,\n    ROLES.DOCTOR,\n    ROLES.SHERIFF,\n    ...Array(4).fill(ROLES.PIECE)\n  ]);\n\n  const handleOnChangeMembers = useCallback((event: React.ChangeEvent<{}>, values: string[]) => {\n    setMembers(values);\n  }, []);\n\n  const handleOnSubmit = useCallback(() => {\n    const shuffledMembers: Array<typeof ROLES[keyof typeof ROLES]> = shuffleArray(members);\n\n    setGameMembers(\n      shuffledMembers.map((gameMember, index) => ({\n        id: index + 1,\n        role: gameMember,\n        killed: false\n      }))\n    );\n    goToNextStep();\n  }, [members, goToNextStep, setGameMembers]);\n\n  return (\n    <Box>\n      <Autocomplete\n        multiple\n        freeSolo\n        options={Object.values(ROLES)}\n        getOptionLabel={option => option}\n        getOptionSelected={() => false}\n        renderTags={\n          (val, getTagProps) =>\n            val.map((option, index) => (\n              <Chip variant='outlined' label={option} {...getTagProps({ index })} />\n            ))\n          // eslint-disable-next-line react/jsx-curly-newline\n        }\n        renderInput={params => (\n          <TextField {...params} variant='outlined' label='Ролі' placeholder='Нова роль' />\n        )}\n        onChange={handleOnChangeMembers}\n        value={members}\n      />\n\n      <Box textAlign='center' my={2}>\n        <Button variant='contained' color='primary' onClick={handleOnSubmit}>\n          Почати гру\n        </Button>\n      </Box>\n    </Box>\n  );\n};\n\nexport default InputRolesForm;\n","export const shuffleArray = (arr: any[]) =>\n  arr\n    .map(a => [Math.random(), a])\n    .sort((a, b) => a[0] - b[0])\n    .map(a => a[1]);\n","import React, { useState, useCallback } from 'react';\nimport { Stepper, Step, StepLabel, StepContent } from '@material-ui/core';\nimport GameStep from 'shared/components/GameStep';\nimport InputRolesForm from './InputRolesForm';\n\nconst StepsComponent = () => {\n  const [activeStep, setActiveStep] = useState(0);\n\n  const handleNextStep = useCallback(() => {\n    setActiveStep(step => step + 1);\n  }, []);\n\n  return (\n    <Stepper activeStep={activeStep} orientation='vertical'>\n      <Step>\n        <StepLabel>Генерація ролей</StepLabel>\n        <StepContent>\n          <InputRolesForm goToNextStep={handleNextStep} />\n        </StepContent>\n      </Step>\n      <Step>\n        <StepLabel>Гра</StepLabel>\n        <StepContent>\n          <GameStep />\n        </StepContent>\n      </Step>\n    </Stepper>\n  );\n};\n\nexport default StepsComponent;\n","import React from 'react';\nimport Steps from './Steps';\n\nconst RandomRoles = () => <Steps />;\n\nexport default RandomRoles;\n","import React, { useState, useCallback } from 'react';\nimport { AppBar, Container, Tabs, Tab, Box } from '@material-ui/core';\nimport { useGameContext } from 'shared/context/GameContext';\nimport { TABS } from 'shared/constants';\nimport ManualRoles from 'pages/ManualRoles';\nimport RandomRoles from 'pages/RandomRoles';\n\nconst App = () => {\n  const { resetGame } = useGameContext();\n\n  const [tab, setTab] = useState<typeof TABS[keyof typeof TABS]>(TABS.MANUAL_ROLES);\n\n  const handleOnChangeTab = useCallback(\n    (event: React.ChangeEvent<{}>, newTab: typeof TABS[keyof typeof TABS]) => {\n      if (newTab !== tab) resetGame();\n      setTab(newTab);\n    },\n    [tab, resetGame]\n  );\n\n  return (\n    <>\n      <AppBar position='static' color='transparent'>\n        <Tabs\n          value={tab}\n          onChange={handleOnChangeTab}\n          indicatorColor='primary'\n          textColor='primary'\n          centered\n        >\n          <Tab label='Ручне введення' value={TABS.MANUAL_ROLES} />\n          <Tab label='Випадкова генерація' value={TABS.RANDOM_ROLES} />\n        </Tabs>\n      </AppBar>\n\n      <Container component='main' maxWidth='sm'>\n        <Box py={{ xs: 2, sm: 3 }}>\n          {tab === TABS.MANUAL_ROLES && <ManualRoles />}\n          {tab === TABS.RANDOM_ROLES && <RandomRoles />}\n        </Box>\n      </Container>\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CssBaseline } from '@material-ui/core';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from 'styles/theme';\nimport { GameContextProvider } from 'shared/context/GameContext';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst renderRoot = document.getElementById('root');\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <CssBaseline />\n    <GameContextProvider>\n      <App />\n    </GameContextProvider>\n  </ThemeProvider>,\n  renderRoot\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}